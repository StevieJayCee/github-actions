name: Send an artifact URL to slack
on:
    workflow_run:
        types:
            - "completed"
        # specifically listen out for the other lighthouse CI task to complete
        workflows:
            - 'Lighthouse CI'   
jobs:
    send-artifact-url-to-slack:
        # only do it if the last job passed
        if: github.event.workflow_run.conclusion == 'success'
        runs-on: ubuntu-latest
        steps:
            - name: Git checkout
              uses: actions/checkout@v3
            - name: Get Artifact URL & PR Info
              env:
                GITHUB_TOKEN: ${{ github.token }}
                OWNER: ${{ github.repository_owner }}
                REPO: ${{ github.event.repository.name }}
                WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}

                # Uses the env and jq to hit the github API to
                # get the last generated artifact relevant to this action.
                # it also stores some pull request stuff not used.
                # but left it in in case we can find use.
                # src: https://github.com/orgs/community/discussions/51403
              run: |
                PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
                echo "Previous Job ID: $PREVIOUS_JOB_ID"
                echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"
                
                SUITE_ID=$(jq -r '.check_suite_id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
                echo "Previous Suite ID: $SUITE_ID"
                echo "SUITE_ID=$SUITE_ID" >> "$GITHUB_ENV"
                
                ARTIFACT_ID=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
                    --jq ".artifacts.[] |
                    select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
                    select(.expired==false) |
                    .id")
                
                echo "Artifact ID: $ARTIFACT_ID"
                echo "ARTIFACT_ID=$ARTIFACT_ID" >> "$GITHUB_ENV"
                
                PR_NUMBER=$(jq -r '.pull_requests[0].number' \
                    <<< "$WORKFLOW_RUN_EVENT_OBJ")
                
                echo "Pull request Number: $PR_NUMBER"
                echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"
                
                HEAD_SHA=$(jq -r '.pull_requests[0].head.sha' \
                    <<< "$WORKFLOW_RUN_EVENT_OBJ")
                
                echo "Head SHA: $HEAD_SHA"
                echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"
            
            - name: Send the message to Slack channel
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
                  SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
                  ARTIFACT_URL: "${{ github.server_url }}/${{ github.repository }}/suites/${{env.SUITE_ID}}/artifacts/${{env.ARTIFACT_ID}}"
          
              id: slack
              uses: ./.github/actions/send-slack-message
              if: success() || failure()
              with:
                message: "Lighthouse artifact now available"
                link: "${{env.ARTIFACT_URL }}"